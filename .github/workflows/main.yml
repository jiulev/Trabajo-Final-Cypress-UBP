name: Cypress Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  e2e:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      # 🔧 FIX CI: cubrir diferencias de mayúsc/minúsc (Linux es case-sensitive)
      - name: Make Linux case-safe (create copies or stubs)
        shell: bash
        run: |
          set -euo pipefail
          # --- services/Login(.js) ---
          mkdir -p cypress/services
          if [ ! -f cypress/services/Login.js ] && [ ! -f cypress/services/login.js ]; then
            printf '%s\n' \
              '// STUB creado en CI (case-sensitive fix).' \
              'const Login = {};' \
              'export default Login;' > cypress/services/Login.js
          fi
          [ -f cypress/services/Login.js ] || cp cypress/services/login.js cypress/services/Login.js
          [ -f cypress/services/login.js ] || cp cypress/services/Login.js cypress/services/login.js
          # --- pages/practicetestautomation/LoginPage(.js) y SuccessPage(.js) ---
          mkdir -p cypress/pages/practicetestautomation
          mk_stub_page () {
            local path="$1"
            if [ ! -f "$path" ]; then
              printf '%s\n' \
                '// STUB de PageObject creado en CI (no se usa en los specs ejecutados).' \
                'export default class PageStub { constructor(){} }' > "$path"
            fi
          }
          mk_stub_page "cypress/pages/practicetestautomation/LoginPage.js"
          mk_stub_page "cypress/pages/practicetestautomation/SuccessPage.js"
          echo "Case-safe setup done:"
          ls -la cypress/services || true
          ls -la cypress/pages/practicetestautomation || true
      # 👀 Verificamos que existan los 3 specs (fail temprano si faltan)
      - name: Check selected spec files exist
        shell: bash
        run: |
          set -e
          for f in \
            cypress/journeys/features/e2e/bookstore_login.feature \
            cypress/journeys/features/e2e/lambdatest_input_form.feature \
            cypress/journeys/features/api/petstore-julieta/petstore_api.feature
          do
            echo "Checking $f"
            test -f "$f"
          done
          echo "All selected specs present."
      # ▶️ Ejecutamos SOLO tus 3 features (SIN comillas alrededor de la lista)
      - name: Run Cypress (only selected specs)
        uses: cypress-io/github-action@v6
        with:
          command: >
            npx cypress run
            -e ENV=DEV
            --spec cypress/journeys/features/e2e/bookstore_login.feature,cypress/journeys/features/e2e/lambdatest_input_form.feature,cypress/journeys/features/api/petstore-julieta/petstore_api.feature
      # 📎 Evidencias siempre
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            jsonlogs
            reports

