name: Cypress Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  e2e:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        spec:
          - cypress/journeys/features/e2e/bookstore_login.feature
          - cypress/journeys/features/e2e/lambdatest_input_form.feature
          - cypress/journeys/features/api/petstore-julieta/petstore_api.feature

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      # FIX Linux case-sensitive (crea/copias mÃ­nimos si faltan)
      - name: Make Linux case-safe (create copies or stubs)
        shell: bash
        run: |
          set -euo pipefail

          mkdir -p cypress/services
          if [ ! -f cypress/services/Login.js ] && [ ! -f cypress/services/login.js ]; then
            printf '%s\n' \
              '// STUB creado en CI (case-sensitive fix).' \
              'const Login = {};' \
              'export default Login;' > cypress/services/Login.js
          fi
          [ -f cypress/services/Login.js ] || cp cypress/services/login.js cypress/services/Login.js
          [ -f cypress/services/login.js ] || cp cypress/services/Login.js cypress/services/login.js

          mkdir -p cypress/pages/practicetestautomation
          mk_stub_page () {
            local path="$1"
            if [ ! -f "$path" ]; then
              printf '%s\n' \
                '// STUB de PageObject creado en CI (no se usa en los specs ejecutados).' \
                'export default class PageStub { constructor(){} }' > "$path"
            fi
          }
          mk_stub_page "cypress/pages/practicetestautomation/LoginPage.js"
          mk_stub_page "cypress/pages/practicetestautomation/SuccessPage.js"

      # Chequeo que el spec del job exista
      - name: Check spec exists
        shell: bash
        run: |
          set -e
          echo "Spec a ejecutar: ${{ matrix.spec }}"
          test -f "${{ matrix.spec }}" || (echo "No existe ${{ matrix.spec }}" && exit 1)

      # Ejecutar UN spec por job (sin command, sin comillas)
      - name: Run Cypress
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          spec: ${{ matrix.spec }}
        env:
          CYPRESS_ENV: DEV  # equivale a -e ENV=DEV

      # Subir evidencias
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts-${{ matrix.spec }}
          path: |
            cypress/screenshots
            cypress/videos
            jsonlogs
            reports
