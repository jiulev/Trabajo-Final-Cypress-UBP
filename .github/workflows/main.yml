name: Cypress Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  e2e:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      # ðŸ”§ Parcheamos package.json SOLO en CI para no tocar tu repo:
      # limitamos el glob de stepDefinitions a ui y api
      - name: Limit step definitions to ui + api (CI-only patch)
        run: |
          node -e "const fs=require('fs');const p=JSON.parse(fs.readFileSync('package.json'));p['cypress-cucumber-preprocessor']=p['cypress-cucumber-preprocessor']||{};p['cypress-cucumber-preprocessor'].stepDefinitions=['cypress/journeys/step_definitions/ui/**/*.{js,ts}','cypress/journeys/step_definitions/api/**/*.{js,ts}'];fs.writeFileSync('package.json',JSON.stringify(p,null,2));console.log('Patched stepDefinitions for CI');"

      # âœ… Ejecutamos SOLO tus dos features
      - name: Run Cypress (only selected specs)
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          spec: |
            cypress/journeys/features/e2e/bookstore_login.feature
            cypress/journeys/features/e2e/lambdatest_input_form.feature
          env: ENV=DEV

      # (Opcional) Generar el reporte HTML si tu script existe
      - name: Generate HTML report (optional)
        run: |
          if [ -f cucumber-html-report.js ]; then
            npm run report
          fi

      # Subimos artefactos para ver evidencias
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            jsonlogs
            reports


